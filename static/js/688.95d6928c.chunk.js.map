{"version":3,"file":"static/js/688.95d6928c.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","components/StatusFilter/StatusFilter.jsx","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","pages/Contacts.jsx"],"sourcesContent":["export const getContacts = state => state.contacts.items;\n\nexport const getFilterValue = state => state.filters.status;\n\nexport const getIsLoadingStatus = state => state.contacts.isLoading;\n\nexport const getErrorStatus = state => state.contacts.error;\n","// extracted by mini-css-extract-plugin\nexport default {\"wrap\":\"ContactForm_wrap__Z1N47\",\"form\":\"ContactForm_form__dhl+T\",\"label\":\"ContactForm_label__-cVXI\",\"input\":\"ContactForm_input__Bl93P\",\"button\":\"ContactForm_button__eSwX9\"};","import { useDispatch, useSelector } from 'react-redux';\nimport { getContacts } from '../../redux/contacts/selectors';\n\nimport css from './ContactForm.module.css';\nimport { addContact } from 'redux/contacts/operations';\n\nconst ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(getContacts);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const name = event.target.elements.name.value;\n    const number = event.target.elements.number.value;\n    const normalizedCase = name.toLowerCase();\n    let isAdded = false;\n\n    contacts.forEach(el => {\n      if (el.name.toLowerCase() === normalizedCase) {\n        alert(`${name} is already in contacts`);\n        isAdded = true;\n      }\n    });\n\n    if (isAdded) {\n      return;\n    }\n    dispatch(addContact({ name, number }));\n    event.target.reset();\n  };\n\n  return (\n    <div>\n      <form className={css.submit} onSubmit={handleSubmit}>\n        <label className={css.label}>\n          Name\n          <input\n            className={css.input}\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n        </label>\n        <label className={css.label}>\n          Number\n          <input\n            className={css.input}\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n        </label>\n        <button className={css.btn} type=\"submit\">\n          <span>Add contact</span>\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default ContactForm;\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { setStatusFilter } from '../../redux/filter/filterSlice';\n\nconst StatusFilter = () => {\n  const dispatch = useDispatch();\n\n  const handleFilterChange = event => {\n    dispatch(setStatusFilter(event.target.value));\n  };\n\n  return (\n    <form>\n      <input\n        placeholder=\"Find contacts by name\"\n        type=\"text\"\n        name=\"name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Enter name\"\n        onChange={handleFilterChange}\n      />\n      <button type=\"button\">Search</button>\n      <button type=\"button\">Directions</button>\n    </form>\n  );\n};\n\nexport default StatusFilter;\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ContactList_list__csErn\",\"item\":\"ContactList_item__EZYHO\",\"button\":\"ContactList_button__7kL4l\",\"contact_name\":\"ContactList_contact_name__Jt8ih\",\"contact_number\":\"ContactList_contact_number__IPN+-\"};","import { useDispatch, useSelector } from 'react-redux';\nimport {\n  getContacts,\n  getFilterValue,\n  getErrorStatus,\n} from '../../redux/contacts/selectors';\nimport { deleteContact } from '../../redux/contacts/operations';\nimport React from 'react';\n\nimport css from './ContactList.module.css';\n\nexport const ContactList = () => {\n  const contacts = useSelector(getContacts);\n  const statusFilter = useSelector(getFilterValue);\n  const dispatch = useDispatch();\n  const error = useSelector(getErrorStatus);\n\n  const filtersContacts = contacts.filter(\n    contact =>\n      contact.name.toLowerCase().includes(statusFilter.toLowerCase()) ||\n      contact.number\n        .replace(/-|\\s/g, '')\n        .includes(statusFilter.replace(/-|\\s/g, ''))\n  );\n\n  return filtersContacts.length > 0 ? (\n    <ul className={css.list}>\n      {filtersContacts.map(({ id, name, number }) => (\n        <li key={id}>\n          <div>\n            <img\n              alt={`Avatar n°${name}`}\n              src={`/static/images/avatar/${name}.jpg`}\n            />\n          </div>\n          <div>{`${name}: ${number}`}</div>\n          <div>\n            <button onClick={() => dispatch(deleteContact(id))}>Delete</button>\n          </div>\n        </li>\n      ))}\n    </ul>\n  ) : (\n    (error && <p>Error: {error}</p>) || <p>No contacts</p>\n  );\n};\n\nexport default ContactList;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { getErrorStatus, getIsLoadingStatus } from 'redux/contacts/selectors';\nimport { fetchContact } from 'redux/contacts/operations';\nimport ContactForm from 'components/ContactForm/ContactForm';\nimport StatusFilter from 'components/StatusFilter/StatusFilter';\nimport ContactList from 'components/ContactList/ContactList';\n\nimport * as React from 'react';\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport Modal from '@mui/material/Modal';\n\nconst style = {\n  position: 'absolute',\n  top: '50%',\n  left: '50%',\n  transform: 'translate(-50%, -50%)',\n  width: 400,\n  bgcolor: 'background.paper',\n  border: '2px solid #000',\n  boxShadow: 24,\n  p: 4,\n};\n\nconst Contact = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(getIsLoadingStatus);\n  const error = useSelector(getErrorStatus);\n\n  const [open, setOpen] = React.useState(false);\n  const handleOpen = () => setOpen(true);\n  const handleClose = () => setOpen(false);\n\n  useEffect(() => {\n    dispatch(fetchContact());\n  }, [dispatch]);\n\n  return (\n    <>\n      <div>\n        <Button onClick={handleOpen}>Add Contact</Button>\n        <Modal\n          open={open}\n          onClose={handleClose}\n          aria-labelledby=\"modal-modal-title\"\n          aria-describedby=\"modal-modal-description\"\n        >\n          <Box sx={style}>\n            <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\n              Add Contact\n            </Typography>\n            <ContactForm />\n          </Box>\n        </Modal>\n      </div>\n      <div>\n        <StatusFilter />\n        {isLoading && !error ? <p>Loading...</p> : <ContactList />}\n      </div>\n    </>\n  );\n};\n\nexport default Contact;\n"],"names":["getContacts","state","contacts","items","getFilterValue","filters","status","getIsLoadingStatus","isLoading","getErrorStatus","error","dispatch","useDispatch","useSelector","className","css","onSubmit","event","preventDefault","name","target","elements","value","number","normalizedCase","toLowerCase","isAdded","forEach","el","alert","addContact","reset","type","pattern","title","required","placeholder","onChange","setStatusFilter","statusFilter","filtersContacts","filter","contact","includes","replace","length","map","id","alt","src","onClick","deleteContact","style","position","top","left","transform","width","bgcolor","border","boxShadow","p","React","open","setOpen","useEffect","fetchContact","Button","Modal","onClose","Box","sx","Typography","variant","component"],"sourceRoot":""}